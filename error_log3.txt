warning: unused import: `super::schema::get_full_schema_columns`
 --> crates/sapflux-core/src/processing/unification.rs:5:5
  |
5 | use super::schema::get_full_schema_columns;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: field `description` is never read
  --> crates/sapflux-core/src/processing/types.rs:22:16
   |
18 | pub(crate) struct ManualFix {
   |                   --------- field in this struct
...
22 |     pub(crate) description: Option<String>,
   |                ^^^^^^^^^^^
   |
   = note: `ManualFix` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis
   = note: `#[warn(dead_code)]` on by default

warning: `sapflux-core` (lib) generated 2 warnings (run `cargo fix --lib -p sapflux-core` to apply 1 suggestion)
warning: unused import: `ChunkCompareEq`
 --> crates/sapflux-cli/src/main.rs:6:23
  |
6 | use polars::prelude::{ChunkCompareEq, ParquetWriter, ChunkUnique, col, lit, IntoLazy};
  |                       ^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: variable does not need to be mutable
   --> crates/sapflux-cli/src/main.rs:160:9
    |
160 |     let mut final_df = final_lf.collect()?;
    |         ----^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: `sapflux-cli` (bin "sapflux-cli") generated 2 warnings (run `cargo fix --bin "sapflux-cli"` to apply 2 suggestions)
    Finished `release` profile [optimized] target(s) in 0.47s
     Running `target/release/sapflux-cli process --output output/sapflux_data.parquet`

thread 'main' panicked at /Users/rileyleff/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polars-core-0.48.1/src/scalar/mod.rs:90:92:
called `Result::unwrap()` on an `Err` value: InvalidOperation(ErrString("constructing a Series with data type Int128 from AnyValues is not supported"))
stack backtrace:
   0:        0x105064f4c - <std::sys::backtrace::BacktraceLock::print::DisplayBacktrace as core::fmt::Display>::fmt::h92dda645f072dcaf
   1:        0x105086d6c - core::fmt::write::hbc92919d8e8f9a96
   2:        0x1050611e4 - std::io::Write::write_fmt::hcee3b5dc9ab531be
   3:        0x105064e00 - std::sys::backtrace::BacktraceLock::print::h0f497abce563e5d2
   4:        0x105065ebc - std::panicking::default_hook::{{closure}}::h62595143a6c21f05
   5:        0x105065d0c - std::panicking::default_hook::hd800536ed1df5085
   6:        0x10506699c - std::panicking::rust_panic_with_hook::h1882a30575fbb763
   7:        0x1050665c8 - std::panicking::begin_panic_handler::{{closure}}::h39275ef3005e6337
   8:        0x1050653fc - std::sys::backtrace::__rust_end_short_backtrace::h6ede323c05a76849
   9:        0x105066270 - __rustc[95feac21a9532783]::rust_begin_unwind
  10:        0x10519860c - core::panicking::panic_fmt::h529fda7ea817ba4f
  11:        0x105198944 - core::result::unwrap_failed::hd402f38eeb0f0f01
  12:        0x10459d690 - polars_core::scalar::Scalar::into_series::h54358952e224ab91
  13:        0x10459d2e4 - polars_core::scalar::Scalar::cast_with_options::he56d40064918aeb6
  14:        0x103379798 - polars_plan::plans::lit::DynLiteralValue::try_materialize_to_dtype::hbb9f6f43ae099be7
  15:        0x1032e1910 - polars_plan::plans::conversion::type_coercion::try_inline_literal_cast::hf3667886bbe67de7
  16:        0x1032dfbc8 - <polars_plan::plans::conversion::type_coercion::TypeCoercionRule as polars_plan::plans::optimizer::stack_opt::OptimizationRule>::optimize_expr::h2fb6ab0a4e39647c
  17:        0x103438d80 - polars_plan::plans::conversion::stack_opt::ConversionOptimizer::optimize_exprs::h76842b961139edcb
  18:        0x1033031e0 - polars_plan::plans::conversion::dsl_to_ir::run_conversion::hddf63b75f0c63e41
  19:        0x10331ba88 - polars_plan::plans::conversion::dsl_to_ir::to_alp_impl::{{closure}}::h604954ab7d41424f
  20:        0x103319f6c - polars_plan::plans::conversion::dsl_to_ir::to_alp_impl::h70d928372421b355
  21:        0x1031f2378 - <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::try_fold::hf36a065f4bc357df
  22:        0x10319c958 - alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter::hbe77077f0d0d5d8b
  23:        0x10331a9ec - polars_plan::plans::conversion::dsl_to_ir::to_alp_impl::{{closure}}::h604954ab7d41424f
  24:        0x103319f6c - polars_plan::plans::conversion::dsl_to_ir::to_alp_impl::h70d928372421b355
  25:        0x10331c580 - polars_plan::plans::conversion::dsl_to_ir::to_alp_impl::{{closure}}::h604954ab7d41424f
  26:        0x103319f6c - polars_plan::plans::conversion::dsl_to_ir::to_alp_impl::h70d928372421b355
  27:        0x103302dcc - polars_plan::plans::conversion::dsl_to_ir::to_alp::h4c167f24a6494ec2
  28:        0x1029f9a84 - polars_lazy::frame::cached_arenas::<impl polars_lazy::frame::LazyFrame>::collect_schema::h8daa78d871ed16ca
  29:        0x1028027d4 - sapflux_cli::main::{{closure}}::h194c06edcc13b381
  30:        0x1027f2814 - tokio::runtime::park::CachedParkThread::block_on::h2781e34b1090119f
  31:        0x1028b88f0 - tokio::runtime::runtime::Runtime::block_on::ha5a15cd1accb513f
  32:        0x102911b24 - sapflux_cli::main::h52819e5cb35488c3
  33:        0x102880d48 - std::sys::backtrace::__rust_begin_short_backtrace::h503b9f3bbf66299e
  34:        0x102899d04 - std::rt::lang_start::{{closure}}::hfbc8c63144d04c7a
  35:        0x1050598c4 - std::rt::lang_start_internal::hdff9e551ec0db2ea
  36:        0x102911c14 - _main
