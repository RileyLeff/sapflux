path_to_selenium_server = "util/selenium-server-standalone-4.27.0.jar"

# this is by far the most likely way for this system to break or fail.
# if the external data sync via selenium stops working, take a look at this.
download_button_finder = "/html/body/div[3]/div/div[3]/div[1]/div/div/div/div[2]/div/div[1]/div/div/div[2]/div/div[1]"

drive_url_prefix = "https://drive.google.com/drive/folders/"

selenium_server_startup_wait_time_sec = 2

# Key to authenticate to gdrive using a service account for automated runs (e.g. on github actions).
# If for some reason you want one of these, look up something like "google drive api gcloud service account"
path_to_key = ".env/key.json"

# To run the pipeline without a key at the above path, you need to set env variable SAP_RUN_SETTING 
# to "interactive". This will open a browser window or console response for you to authenticate 
# manually when you fire up the pipeline.
# From R, setting this env var is achievable with Sys.setenv(SAP_RUN_SETTING = "interactive")
# If you're working interactively, make sure you do this in the console, not in the project files.
# This is a feature of the environment the code is executing in, not a feature of the code itself.
# From bash/zsh, this is achievable with export SAP_RUN_SETTING="interactive"
# In general this is more chad than interactive development. e.g. Rscript R/main.R
env_key = "SAP_RUN_SETTING"

# Default port 4444 is often in use for other stuff on MacOS
selenium_port = 4445

forbidden_words_in_datafile_paths = ["public", "Public", "status", "Status", "DataTableInfo"]

possible_timestamp_formats = [
    # 2021-06-06 08:30:00
    "%Y-%m-%d %H:%M:%S", 
    # 2021/06/06 08:30:00
    "%m/%d/%y %H:%M"
]

cols_to_make_numeric = ["alpha_out", "alpha_in", "beta_out", "beta_in", "tmax_t_out", "tmax_t_in"]

early_bound_timestamp = 2020-06-06T00:00:00Z

measurement_interval_in_seconds = 1800

implexx_colnames = [
    "ts", 
    "rn", 
    "batt_v", 
    "id", 
    "sdi", 
    "sftot_wack", 
    "vh_o_wack", 
    "vh_in_wack", 
    "alpha_out", 
    "alpha_in", 
    "beta_out", 
    "beta_in", 
    "tmax_t_out", 
    "tmax_t_in"
]

[parameters]
    [parameters.wnd_diam]
    name = "wound diameter"
    def = "diameter of drilled-out hole for probe"
    unit = "cm"
    value = 0.2

    [parameters.sw_gw]
    name = "sapwood green/fresh/wet weight"
    def = "wet weight of a sapwood core"
    unit = "kg"
    value = 0.001

    [parameters.sw_dw]
    name = "sapwood dry weight"
    def = "dry weight of a sapwood core"
    unit = "kg"
    value = 0.005 

    [parameters.k]
    name = "k"
    def = "The rate of diffusion of heat in the wood and sap matrix as calculated from Vandegehuchte & Steppe (2012). "
    unit = "cm^2/s"
    value = 0.002409611

    [parameters.hpd]
    name = "heat pulse duration"
    def = "how long the heater is doing its thing"
    unit = "sec"
    value = 3

    [parameters.woundcorr]
    name = "b"
    def = "some stupid empirical magic number"
    unit = "fuck if I know"
    value = 1.8905

    [parameters.t]
    name = "time since heat pulse emission"
    def = "see name"
    unit = "seconds"
    value = 60

    [parameters.sph]
    name = "seconds per hour"
    def = "see name. rate quantity. super exciting."
    unit = "seconds/hour"
    value = 3600

    [parameters.pd]
    name = "wood density"
    def = "basic density of dry wood"
    unit = "kg/m3"
    value = 500

    [parameters.cd]
    name = "wood matrix specific heat capacity"
    def = ""
    unit = "J/kg/째C at 20 째C"
    value = 1000

    [parameters.mc]
    name = "gravimetric water content of sapwood"
    def = ""
    unit = "kg/kg"
    value = 1

    [parameters.cw]
    name = "specific heat capacity of sap"
    def = ""
    unit = "J/kg/째C at 20 째C"
    value = 4182

    [parameters.pw]
    name = "density of water"
    def = ""
    unit = "kg/m3"
    value = 1000

[externals]
# required fields: 
    # possible_ids 
        # may be either a single string or a named table of multiple strings
    # download_via
        # may be either "api" or "selenium"
    # local_path
        # must be a valid path within the project directory, relative to project root

# optional fields or depend on above:
    # formatter
        # optional name of a function to format the dataset after download before saving to 
        # local_path
    # id_determiner
        # required if possible_ids contains multiple possible IDs. name of a function to determine
        # which name from the named table of possible IDs contains the correct ID string.
        # e.g. for chromedriver, "get_platform_for_chromedriver" is a function that returns one of 
        # "windows_x64", "mac_aarch64" or similar. 
[externals.deployments]
possible_ids = "1mFr-Y5TmiqUqZFoxtfd68nqoNgtceU-xBcRmnrw6hfo"
download_via = "api"
local_path = "data/deployments.csv"
formatter = "format_deployments"

[externals.sensors]
possible_ids = "10xYreHihXAF8LRmgjzAV45WLQOK4GcChkOKCK7YQ1nI"
download_via = "api"
local_path = "data/sensors.csv"
formatter = "format_sensors"

[externals.dst_transitions]
possible_ids = "13X7l7a7vGK2J5YwTX-4zjf8KpPsGSD8XWdXbDfU8BXk"
download_via = "api"
local_path = "data/dst_transitions.csv"
formatter = "format_dst"

[externals.raw]
possible_ids = "147L5_KrDVFfFyIScO1jkWNXgJeGPqDbz?usp=drive_link"
download_via = "selenium"
local_path = "data/raw"

[externals.chromedriver]
possible_ids.windows_x64 = "1Nsx_VhGPPJZK2JsIw0oeJ3GEB0B7r3R_"
possible_ids.linux_x64 = "1W_og0FafTQeOulERDDvEJTAwqnXAnN6R"
possible_ids.mac_x64 = "1W_6EeRWN26gvUCl1lROVrFpEkeBo6xAl"
possible_ids.mac_aarch64 = "1SBzk8E3b6VOAzdaiZN6xyK1j-8UV94Mx"
download_via = "api"
local_path = "util/chromedriver"
id_determiner = "get_platform_for_chromedriver"

[chrome_options]
chromeOptions.prefs."download.prompt_for_download" = false
chromeOptions.prefs."download.directory_upgrade" = true
