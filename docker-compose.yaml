version: "3.9"

services:
  db:
    image: postgis/postgis:16-3.4
    environment:
      POSTGRES_USER: sapflux
      POSTGRES_PASSWORD: sapflux
      POSTGRES_DB: sapflux
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sapflux"]
      interval: 5s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:RELEASE.2024-03-30T09-22-53Z
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: miniosecret
    command: server /data --console-address :9001
    ports:
      - "9000:9000"
      - "9001:9001"
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5

  minio-init:
    image: minio/mc:RELEASE.2024-03-30T16-28-06Z
    depends_on:
      - minio
    entrypoint: ["/bin/sh", "-c"]
    command: >-
      until mc alias set local http://minio:9000 minio miniosecret; do sleep 1; done &&
      mc mb --ignore-existing local/sapflux-tests &&
      mc anonymous set download local/sapflux-tests
    restart: "no"

  api:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - db
      - minio
      - minio-init
    environment:
      DATABASE_URL: postgres://sapflux:sapflux@db:5432/sapflux
      SAPFLUX_OBJECT_STORE_KIND: s3
      S3_ENDPOINT_URL: http://minio:9000
      S3_REGION: us-east-1
      S3_ACCESS_KEY_ID: minio
      S3_SECRET_ACCESS_KEY: miniosecret
      S3_FORCE_PATH_STYLE: "true"
      SAPFLUX_GIT_COMMIT_HASH: local-dev
    ports:
      - "8080:8080"
    command: ["/app/sapflux", "serve", "--addr", "0.0.0.0:8080"]
